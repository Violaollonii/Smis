// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smis.Models;

#nullable disable

namespace Smis.Migrations
{
    [DbContext(typeof(SmisContext))]
    [Migration("20250531234135_AddRezervimiSalles")]
    partial class AddRezervimiSalles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LigjerataOrari", b =>
                {
                    b.Property<int>("OrariId")
                        .HasColumnType("int")
                        .HasColumnName("OrariID");

                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.Property<int>("LendaId")
                        .HasColumnType("int")
                        .HasColumnName("LendaID");

                    b.HasKey("OrariId", "StafiId", "LendaId")
                        .HasName("PK__Ligjerat__3EC287FF252515D0");

                    b.HasIndex("StafiId", "LendaId");

                    b.ToTable("Ligjerata_Orari", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3",
                            Name = "StafAkademik",
                            NormalizedName = "STAFAKADEMIK"
                        },
                        new
                        {
                            Id = "4",
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OrariSalla", b =>
                {
                    b.Property<int>("OrariId")
                        .HasColumnType("int")
                        .HasColumnName("OrariID");

                    b.Property<int>("SallaId")
                        .HasColumnType("int")
                        .HasColumnName("SallaID");

                    b.HasKey("OrariId", "SallaId")
                        .HasName("PK__Orari_Sa__13CB1F8C031D9C39");

                    b.HasIndex("SallaId");

                    b.ToTable("Orari_Salla", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<int>("DepartamentiId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.HasKey("AdminId")
                        .HasName("PK__Admin__719FE4E8E38461D9");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("Id");

                    b.HasIndex("UniId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Departamenti", b =>
                {
                    b.Property<int>("DepartamentiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentiId"));

                    b.Property<string>("Emri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.HasKey("DepartamentiId")
                        .HasName("PK__Departam__67077AE2D726109C");

                    b.HasIndex("UniId");

                    b.ToTable("Departamenti", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Grupi", b =>
                {
                    b.Property<int>("GrupiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GrupiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupiId"));

                    b.Property<int?>("DepartamentiId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    b.Property<string>("Emri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("OrariId")
                        .HasColumnType("int")
                        .HasColumnName("OrariID");

                    b.Property<int?>("SemestriId")
                        .HasColumnType("int")
                        .HasColumnName("SemestriID");

                    b.HasKey("GrupiId")
                        .HasName("PK__Grupi__580495DA09264F41");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("OrariId");

                    b.HasIndex("SemestriId");

                    b.ToTable("Grupi", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Lenda", b =>
                {
                    b.Property<int>("LendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LendaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LendaId"));

                    b.Property<int?>("DepartamentiId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    b.Property<string>("Emri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Kredite")
                        .HasColumnType("int");

                    b.Property<int?>("SemestriId")
                        .HasColumnType("int")
                        .HasColumnName("SemestriID");

                    b.HasKey("LendaId")
                        .HasName("PK__Lenda__F222ADBEE91CCC4B");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("SemestriId");

                    b.ToTable("Lenda");
                });

            modelBuilder.Entity("Smis.Models.Ligjerata", b =>
                {
                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.Property<int>("LendaId")
                        .HasColumnType("int")
                        .HasColumnName("LendaID");

                    b.HasKey("StafiId", "LendaId")
                        .HasName("PK__Ligjerat__68B8092B794D08D0");

                    b.HasIndex("LendaId");

                    b.ToTable("Ligjerata");
                });

            modelBuilder.Entity("Smis.Models.Nota", b =>
                {
                    b.Property<int>("NotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaId"));

                    b.Property<DateOnly?>("DataVendosjes")
                        .HasColumnType("date");

                    b.Property<bool>("EshteRefuzuar")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NotaNr")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<string>("NotaShkronje")
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("ParaqitjaId")
                        .HasColumnType("int")
                        .HasColumnName("ParaqitjaID");

                    b.Property<int?>("ProvimiId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentiId")
                        .HasColumnType("int")
                        .HasColumnName("StudentiID");

                    b.HasKey("NotaId")
                        .HasName("PK__Nota__EF36CC7AADB7961F");

                    b.HasIndex("ParaqitjaId")
                        .IsUnique()
                        .HasFilter("[ParaqitjaID] IS NOT NULL");

                    b.HasIndex("ProvimiId");

                    b.HasIndex("StudentiId");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("Smis.Models.Orari", b =>
                {
                    b.Property<int>("OrariId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrariID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrariId"));

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("Koha")
                        .HasColumnType("time");

                    b.Property<string>("Lloji")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ndërrimi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("OrariId")
                        .HasName("PK__Orari__9849076D327A3909");

                    b.ToTable("Orari", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Pagesa", b =>
                {
                    b.Property<int>("PagesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PagesaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagesaId"));

                    b.Property<DateOnly?>("DataPageses")
                        .HasColumnType("date");

                    b.Property<decimal?>("Shuma")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("StudentiId")
                        .HasColumnType("int")
                        .HasColumnName("StudentiID");

                    b.HasKey("PagesaId")
                        .HasName("PK__Pagesa__D4F1A29DF907B783");

                    b.HasIndex("StudentiId");

                    b.ToTable("Pagesa", (string)null);
                });

            modelBuilder.Entity("Smis.Models.ParaqitjaEprovimit", b =>
                {
                    b.Property<int>("ParaqitjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParaqitjaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParaqitjaId"));

                    b.Property<DateOnly?>("DataProvimit")
                        .HasColumnType("date");

                    b.Property<bool>("EshtePerfunduar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EshtePerfunduar");

                    b.Property<int?>("LendaId")
                        .HasColumnType("int")
                        .HasColumnName("LendaID");

                    b.Property<int>("StafiAkademikId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentiId")
                        .HasColumnType("int")
                        .HasColumnName("StudentiID");

                    b.HasKey("ParaqitjaId")
                        .HasName("PK__Paraqitj__F86D81136DE3097B");

                    b.HasIndex("LendaId");

                    b.HasIndex("StafiAkademikId");

                    b.HasIndex("StudentiId");

                    b.ToTable("ParaqitjaEProvimit", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Provimi", b =>
                {
                    b.Property<int>("ProvimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvimiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvimiId"));

                    b.Property<int?>("LendaId")
                        .HasColumnType("int")
                        .HasColumnName("LendaID");

                    b.Property<int?>("OrariId")
                        .HasColumnType("int")
                        .HasColumnName("OrariID");

                    b.Property<int?>("StafiAkademikId")
                        .HasColumnType("int")
                        .HasColumnName("StafiAkademikID");

                    b.Property<string>("Statusi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProvimiId")
                        .HasName("PK__Provimi__30F18CFB0E2D146E");

                    b.HasIndex("LendaId");

                    b.HasIndex("OrariId");

                    b.HasIndex("StafiAkademikId");

                    b.ToTable("Provimi", (string)null);
                });

            modelBuilder.Entity("Smis.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Smis.Models.RegjistrimiSemestrit", b =>
                {
                    b.Property<int>("RegjistrimiSemestritId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegjistrimiId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegjistrimiSemestritId"));

                    b.Property<DateTime>("DataRegjistrimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lokacioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nderrimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemestriId")
                        .HasColumnType("int")
                        .HasColumnName("SemestriID");

                    b.Property<int>("StudentiId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("RegjistrimiSemestritId");

                    b.HasIndex("SemestriId");

                    b.HasIndex("StudentiId");

                    b.ToTable("RegjistrimiSemestrit");
                });

            modelBuilder.Entity("Smis.Models.RezervimiSalles", b =>
                {
                    b.Property<int>("RezervimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervimiId"));

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Koha")
                        .HasColumnType("time");

                    b.Property<int?>("SallaId")
                        .HasColumnType("int");

                    b.Property<int?>("StafiAkademikId")
                        .HasColumnType("int");

                    b.HasKey("RezervimiId");

                    b.HasIndex("SallaId");

                    b.HasIndex("StafiAkademikId");

                    b.ToTable("RezervimiSalles");
                });

            modelBuilder.Entity("Smis.Models.Salla", b =>
                {
                    b.Property<int>("SallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SallaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SallaId"));

                    b.Property<int?>("Kapaciteti")
                        .HasColumnType("int");

                    b.Property<string>("NrSalles")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Objekti")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("StafiAkademikId")
                        .HasColumnType("int")
                        .HasColumnName("StafiAkademikID");

                    b.Property<int?>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.HasKey("SallaId")
                        .HasName("PK__Salla__B8218E197C43C293");

                    b.HasIndex("StafiAkademikId");

                    b.HasIndex("UniId");

                    b.ToTable("Salla", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Semestri", b =>
                {
                    b.Property<int>("SemestriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SemestriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemestriId"));

                    b.Property<string>("Semestri1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Semestri");

                    b.Property<int?>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.HasKey("SemestriId")
                        .HasName("PK__Semestri__E6EAA2D31A5FF8AA");

                    b.HasIndex("UniId");

                    b.ToTable("Semestri", (string)null);
                });

            modelBuilder.Entity("Smis.Models.StafiAkademik", b =>
                {
                    b.Property<int>("StafiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StafiId"));

                    b.Property<int?>("DepartamentiId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Roli")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Titulli")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.Property<int?>("VitiRegjistrimit")
                        .HasColumnType("int");

                    b.HasKey("StafiId")
                        .HasName("PK__StafiAka__979A23F0A2DE9EE0");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UniId");

                    b.ToTable("StafiAkademik", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Studenti", b =>
                {
                    b.Property<int>("StudentiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentiId"));

                    b.Property<int?>("DepartamentiId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentiID");

                    b.Property<int?>("GrupiId")
                        .HasColumnType("int")
                        .HasColumnName("GrupiID");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SemestriID")
                        .HasColumnType("int");

                    b.Property<string>("Statusi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UniId")
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    b.Property<int?>("VitiRegjistrimit")
                        .HasColumnType("int");

                    b.HasKey("StudentiId")
                        .HasName("PK__Studenti__EBE2AD8DFC0E89E1");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("GrupiId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SemestriID");

                    b.HasIndex("UniId");

                    b.ToTable("Studenti", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Universiteti", b =>
                {
                    b.Property<int>("UniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UniID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniId"));

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Emri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UniId")
                        .HasName("PK__Universi__9E7FA84A35466E61");

                    b.ToTable("Universiteti", (string)null);
                });

            modelBuilder.Entity("Smis.Models.Useri", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Datelindja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Emri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gjinia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mbiemri")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nenshtetesia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NrLeternjoftimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shteti")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefoni")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VendLindja")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Vendbanimi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Zipkodi")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ZIPKodi");

                    b.HasKey("Id")
                        .HasName("PK_AspNetUsers");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LigjerataOrari", b =>
                {
                    b.HasOne("Smis.Models.Orari", null)
                        .WithMany()
                        .HasForeignKey("OrariId")
                        .IsRequired()
                        .HasConstraintName("FK__Ligjerata__Orari__628FA481");

                    b.HasOne("Smis.Models.Ligjerata", null)
                        .WithMany()
                        .HasForeignKey("StafiId", "LendaId")
                        .IsRequired()
                        .HasConstraintName("FK__Ligjerata_Orari__6383C8BA");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Smis.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Smis.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smis.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Smis.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrariSalla", b =>
                {
                    b.HasOne("Smis.Models.Orari", null)
                        .WithMany()
                        .HasForeignKey("OrariId")
                        .IsRequired()
                        .HasConstraintName("FK__Orari_Sal__Orari__787EE5A0");

                    b.HasOne("Smis.Models.Salla", null)
                        .WithMany()
                        .HasForeignKey("SallaId")
                        .IsRequired()
                        .HasConstraintName("FK__Orari_Sal__Salla__797309D9");
                });

            modelBuilder.Entity("Smis.Models.Admin", b =>
                {
                    b.HasOne("Smis.Models.Departamenti", "Departamenti")
                        .WithMany("Admin")
                        .HasForeignKey("DepartamentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Admin__Departame__4CA06362");

                    b.HasOne("Smis.Models.Useri", "User")
                        .WithMany("Admin")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__Admin__UserID__4D94879B");

                    b.HasOne("Smis.Models.Universiteti", "Uni")
                        .WithMany("Admin")
                        .HasForeignKey("UniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Admin__UniID__4E88ABD4");

                    b.Navigation("Departamenti");

                    b.Navigation("Uni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Smis.Models.Departamenti", b =>
                {
                    b.HasOne("Smis.Models.Universiteti", "Universiteti")
                        .WithMany("Departamenti")
                        .HasForeignKey("UniId")
                        .HasConstraintName("FK__Departame__UniID__3A81B327");

                    b.Navigation("Universiteti");
                });

            modelBuilder.Entity("Smis.Models.Grupi", b =>
                {
                    b.HasOne("Smis.Models.Departamenti", "Departamenti")
                        .WithMany("Grupi")
                        .HasForeignKey("DepartamentiId")
                        .HasConstraintName("FK__Grupi__Departame__4316F928");

                    b.HasOne("Smis.Models.Orari", "Orari")
                        .WithMany("Grupi")
                        .HasForeignKey("OrariId")
                        .HasConstraintName("FK__Grupi__OrariID__440B1D61");

                    b.HasOne("Smis.Models.Semestri", "Semestri")
                        .WithMany("Grupi")
                        .HasForeignKey("SemestriId")
                        .HasConstraintName("FK__Grupi__SemestriI__4222D4EF");

                    b.Navigation("Departamenti");

                    b.Navigation("Orari");

                    b.Navigation("Semestri");
                });

            modelBuilder.Entity("Smis.Models.Lenda", b =>
                {
                    b.HasOne("Smis.Models.Departamenti", "Departamenti")
                        .WithMany("Lenda")
                        .HasForeignKey("DepartamentiId")
                        .HasConstraintName("FK__Lenda__Departame__5629CD9C");

                    b.HasOne("Smis.Models.Semestri", "Semestri")
                        .WithMany("Lenda")
                        .HasForeignKey("SemestriId")
                        .HasConstraintName("FK__Lenda__SemestriI__571DF1D5");

                    b.Navigation("Departamenti");

                    b.Navigation("Semestri");
                });

            modelBuilder.Entity("Smis.Models.Ligjerata", b =>
                {
                    b.HasOne("Smis.Models.Lenda", "Lenda")
                        .WithMany("Ligjerata")
                        .HasForeignKey("LendaId")
                        .IsRequired()
                        .HasConstraintName("FK__Ligjerata__Lenda__5FB337D6");

                    b.HasOne("Smis.Models.StafiAkademik", "Stafi")
                        .WithMany("Ligjerata")
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Ligjerata__Stafi__5EBF139D");

                    b.Navigation("Lenda");

                    b.Navigation("Stafi");
                });

            modelBuilder.Entity("Smis.Models.Nota", b =>
                {
                    b.HasOne("Smis.Models.ParaqitjaEprovimit", "ParaqitjaEprovimit")
                        .WithOne("Nota")
                        .HasForeignKey("Smis.Models.Nota", "ParaqitjaId")
                        .HasConstraintName("FK_Nota_ParaqitjaEprovimit");

                    b.HasOne("Smis.Models.Provimi", null)
                        .WithMany("Nota")
                        .HasForeignKey("ProvimiId");

                    b.HasOne("Smis.Models.Studenti", "Studenti")
                        .WithMany("Nota")
                        .HasForeignKey("StudentiId")
                        .HasConstraintName("FK__Nota__StudentiID__6A30C649");

                    b.Navigation("ParaqitjaEprovimit");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.Pagesa", b =>
                {
                    b.HasOne("Smis.Models.Studenti", "Studenti")
                        .WithMany("Pagesa")
                        .HasForeignKey("StudentiId")
                        .HasConstraintName("FK__Pagesa__Studenti__71D1E811");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.ParaqitjaEprovimit", b =>
                {
                    b.HasOne("Smis.Models.Lenda", "Lenda")
                        .WithMany("ParaqitjaEprovimit")
                        .HasForeignKey("LendaId")
                        .HasConstraintName("FK__Paraqitja__Lenda__6EF57B66");

                    b.HasOne("Smis.Models.StafiAkademik", "StafiAkademik")
                        .WithMany()
                        .HasForeignKey("StafiAkademikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smis.Models.Studenti", "Studenti")
                        .WithMany("ParaqitjaEprovimit")
                        .HasForeignKey("StudentiId")
                        .HasConstraintName("FK__Paraqitja__Stude__6E01572D");

                    b.Navigation("Lenda");

                    b.Navigation("StafiAkademik");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.Provimi", b =>
                {
                    b.HasOne("Smis.Models.Lenda", "Lenda")
                        .WithMany("Provimi")
                        .HasForeignKey("LendaId")
                        .HasConstraintName("FK__Provimi__LendaID__5AEE82B9");

                    b.HasOne("Smis.Models.Orari", "Orari")
                        .WithMany("Provimi")
                        .HasForeignKey("OrariId")
                        .HasConstraintName("FK__Provimi__OrariID__5BE2A6F2");

                    b.HasOne("Smis.Models.StafiAkademik", "StafiAkademik")
                        .WithMany("Provimi")
                        .HasForeignKey("StafiAkademikId")
                        .HasConstraintName("FK__Provimi__StafiAk__59FA5E80");

                    b.Navigation("Lenda");

                    b.Navigation("Orari");

                    b.Navigation("StafiAkademik");
                });

            modelBuilder.Entity("Smis.Models.RefreshToken", b =>
                {
                    b.HasOne("Smis.Models.Useri", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Smis.Models.RegjistrimiSemestrit", b =>
                {
                    b.HasOne("Smis.Models.Semestri", "Semestri")
                        .WithMany("RegjistrimiSemestrit")
                        .HasForeignKey("SemestriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smis.Models.Studenti", "Studenti")
                        .WithMany("RegjistrimiSemestrit")
                        .HasForeignKey("StudentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semestri");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.RezervimiSalles", b =>
                {
                    b.HasOne("Smis.Models.Salla", "Salla")
                        .WithMany()
                        .HasForeignKey("SallaId");

                    b.HasOne("Smis.Models.StafiAkademik", "StafiAkademik")
                        .WithMany()
                        .HasForeignKey("StafiAkademikId");

                    b.Navigation("Salla");

                    b.Navigation("StafiAkademik");
                });

            modelBuilder.Entity("Smis.Models.Salla", b =>
                {
                    b.HasOne("Smis.Models.StafiAkademik", "StafiAkademik")
                        .WithMany("Salla")
                        .HasForeignKey("StafiAkademikId")
                        .HasConstraintName("FK__Salla__StafiAkad__74AE54BC");

                    b.HasOne("Smis.Models.Universiteti", "Uni")
                        .WithMany("Salla")
                        .HasForeignKey("UniId")
                        .HasConstraintName("FK__Salla__UniID__75A278F5");

                    b.Navigation("StafiAkademik");

                    b.Navigation("Uni");
                });

            modelBuilder.Entity("Smis.Models.Semestri", b =>
                {
                    b.HasOne("Smis.Models.Universiteti", "Universiteti")
                        .WithMany("Semestri")
                        .HasForeignKey("UniId")
                        .HasConstraintName("FK__Semestri__UniID__3D5E1FD2");

                    b.Navigation("Universiteti");
                });

            modelBuilder.Entity("Smis.Models.StafiAkademik", b =>
                {
                    b.HasOne("Smis.Models.Departamenti", "Departamenti")
                        .WithMany("StafiAkademik")
                        .HasForeignKey("DepartamentiId")
                        .HasConstraintName("FK__StafiAkad__Depar__46E78A0C");

                    b.HasOne("Smis.Models.Useri", "Useri")
                        .WithOne("StafiAkademik")
                        .HasForeignKey("Smis.Models.StafiAkademik", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smis.Models.Universiteti", "Universiteti")
                        .WithMany("StafiAkademik")
                        .HasForeignKey("UniId")
                        .HasConstraintName("FK__StafiAkad__UniID__47DBAE45");

                    b.Navigation("Departamenti");

                    b.Navigation("Universiteti");

                    b.Navigation("Useri");
                });

            modelBuilder.Entity("Smis.Models.Studenti", b =>
                {
                    b.HasOne("Smis.Models.Departamenti", "Departamenti")
                        .WithMany("Studenti")
                        .HasForeignKey("DepartamentiId")
                        .HasConstraintName("FK__Studenti__Depart__52593CB8");

                    b.HasOne("Smis.Models.Grupi", "Grupi")
                        .WithMany("Studenti")
                        .HasForeignKey("GrupiId")
                        .HasConstraintName("FK__Studenti__GrupiI__534D60F1");

                    b.HasOne("Smis.Models.Useri", "Useri")
                        .WithOne("Studenti")
                        .HasForeignKey("Smis.Models.Studenti", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smis.Models.Semestri", "Semestri")
                        .WithMany()
                        .HasForeignKey("SemestriID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Smis.Models.Universiteti", "Universiteti")
                        .WithMany("Studenti")
                        .HasForeignKey("UniId")
                        .HasConstraintName("FK__Studenti__UniID__5165187F");

                    b.Navigation("Departamenti");

                    b.Navigation("Grupi");

                    b.Navigation("Semestri");

                    b.Navigation("Universiteti");

                    b.Navigation("Useri");
                });

            modelBuilder.Entity("Smis.Models.Universiteti", b =>
                {
                    b.OwnsMany("Smis.Models.Lokacionet", "Lokacionet", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Adresa")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Qyteti")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("UniversitetiId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("UniversitetiId");

                            b1.ToTable("Lokacionet");

                            b1.WithOwner()
                                .HasForeignKey("UniversitetiId");
                        });

                    b.Navigation("Lokacionet");
                });

            modelBuilder.Entity("Smis.Models.Departamenti", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Grupi");

                    b.Navigation("Lenda");

                    b.Navigation("StafiAkademik");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.Grupi", b =>
                {
                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.Lenda", b =>
                {
                    b.Navigation("Ligjerata");

                    b.Navigation("ParaqitjaEprovimit");

                    b.Navigation("Provimi");
                });

            modelBuilder.Entity("Smis.Models.Orari", b =>
                {
                    b.Navigation("Grupi");

                    b.Navigation("Provimi");
                });

            modelBuilder.Entity("Smis.Models.ParaqitjaEprovimit", b =>
                {
                    b.Navigation("Nota");
                });

            modelBuilder.Entity("Smis.Models.Provimi", b =>
                {
                    b.Navigation("Nota");
                });

            modelBuilder.Entity("Smis.Models.Semestri", b =>
                {
                    b.Navigation("Grupi");

                    b.Navigation("Lenda");

                    b.Navigation("RegjistrimiSemestrit");
                });

            modelBuilder.Entity("Smis.Models.StafiAkademik", b =>
                {
                    b.Navigation("Ligjerata");

                    b.Navigation("Provimi");

                    b.Navigation("Salla");
                });

            modelBuilder.Entity("Smis.Models.Studenti", b =>
                {
                    b.Navigation("Nota");

                    b.Navigation("Pagesa");

                    b.Navigation("ParaqitjaEprovimit");

                    b.Navigation("RegjistrimiSemestrit");
                });

            modelBuilder.Entity("Smis.Models.Universiteti", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Departamenti");

                    b.Navigation("Salla");

                    b.Navigation("Semestri");

                    b.Navigation("StafiAkademik");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Smis.Models.Useri", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("StafiAkademik")
                        .IsRequired();

                    b.Navigation("Studenti")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
